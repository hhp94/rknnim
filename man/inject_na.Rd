% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_rknnim.R
\name{inject_na}
\alias{inject_na}
\title{Inject NA Values into a Matrix}
\usage{
inject_na(
  obj,
  hash = NULL,
  prop,
  min_na,
  max_na,
  c_thresh = 0.9,
  r_thresh = 0.9,
  max_iter = 1000
)
}
\arguments{
\item{obj}{A matrix or a character string specifying the path to a file to be read
using `safe_read()`. The matrix should contain data where NAs can be injected.}

\item{hash}{Optional hash value for validation when reading from a file using `safe_read()`.}

\item{prop}{Proportion of non-NA elements to convert to NA. Must be between 0 and 1 (exclusive of 0).}

\item{min_na}{Minimum number of NAs to inject. Must be a positive integer.}

\item{max_na}{Maximum number of NAs to inject. Must be a positive integer and at least `min_na`.}

\item{c_thresh}{Maximum allowed proportion of missing values per column after injection (default: 0.9).}

\item{r_thresh}{Maximum allowed proportion of missing values per row after injection (default: 0.9).}

\item{max_iter}{Maximum number of iterations to attempt finding valid NA positions (default: 1000).}
}
\value{
A vector of integer indices indicating the positions in the matrix
where NAs should be injected.
}
\description{
This function randomly selects positions in a matrix to inject NA values, ensuring that
the injection does not exceed specified missingness thresholds for rows and columns.
It attempts to find a valid set of positions within a maximum number of iterations.
}
\details{
The function first computes the number of NAs to inject based on `prop`, clamped between `min_na` and `max_na`.
It then repeatedly samples random positions from existing non-NA elements and checks if injecting NAs
at those positions would exceed the missingness thresholds for any row or column (accounting for existing NAs).
If no valid set is found within `max_iter` attempts, an error is thrown.
}
\examples{
mat <- matrix(1:100, nrow = 10, ncol = 10)
na_positions <- inject_na(mat, prop = 0.1, min_na = 5, max_na = 15)
mat[na_positions] <- NA

}
