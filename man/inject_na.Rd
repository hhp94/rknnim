% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_rknnim.R
\name{inject_na}
\alias{inject_na}
\title{Inject NA Values into a Matrix}
\usage{
inject_na(obj, num_na = 100, rowmax = 0.5, colmax = 0.8, max_iter = 1000)
}
\arguments{
\item{obj}{A numeric matrix where rows represent features and columns represent samples.}

\item{num_na}{The number of missing values used to estimate prediction quality. Must be a positive integer.}

\item{rowmax}{The maximum percent missing data allowed in any row
    (default 50\%). For any rows with more than \code{rowmax}\% missing
    are imputed using the overall mean per sample.}

\item{colmax}{The maximum percent missing data allowed in any column
    (default 80\%). If any column has more than \code{colmax}\% missing data,
    the program halts and reports an error.}

\item{max_iter}{Maximum number of iterations to attempt finding valid NA positions (default: 1000).}
}
\value{
A vector of integer indices indicating the positions in the matrix
where NAs should be injected.
}
\description{
This function randomly selects positions in a matrix to inject a specified number of NA values,
ensuring that the injection does not exceed specified missingness thresholds for rows and columns.
It attempts to find a valid set of positions within a maximum number of iterations.
}
\details{
The function uses the `num_na` parameter to determine the number of NAs to inject.
It then repeatedly samples random positions from existing non-NA elements and checks if injecting NAs
at those positions would exceed the missingness thresholds for any row or column (accounting for existing NAs).
If no valid set is found within `max_iter` attempts, an error is thrown.
}
\examples{
mat <- matrix(1:100, nrow = 10, ncol = 10)
# Inject 10 NAs
na_positions <- inject_na(mat, num_na = 10)
mat[na_positions] <- NA

}
