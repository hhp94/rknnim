% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_rknnim.R
\name{tune_rknnim}
\alias{tune_rknnim}
\title{Tune Parameters for rknnim Imputation}
\usage{
tune_rknnim(
  obj,
  parameters,
  rep = 1,
  num_na = 100,
  max_iter = 1000,
  coord = NULL,
  rowmax = 0.5,
  colmax = 0.8,
  rng.seed = 362436069,
  verbose = TRUE,
  .parallel = FALSE
)
}
\arguments{
\item{obj}{A numeric matrix where rows represent features and columns represent samples.}

\item{parameters}{A data frame specifying the parameter combinations to tune. Must include columns
`n.feat`, `k`, and `n.overlap`. Duplicate rows are automatically removed.}

\item{rep}{The number of repetitions for injecting missing values and evaluating parameters.
Default is 1.}

\item{num_na}{The number of missing values used to estimate prediction quality. Must be a positive integer.}

\item{max_iter}{Maximum number of iterations to attempt finding valid NA positions (default: 1000).}

\item{coord}{Optional coordinate matrix (default: NULL). Currently unused in the function.}

\item{rowmax}{The maximum percent missing data allowed in any row
    (default 50\%). For any rows with more than \code{rowmax}\% missing
    are imputed using the overall mean per sample.}

\item{colmax}{The maximum percent missing data allowed in any column
    (default 80\%). If any column has more than \code{colmax}\% missing data,
    the program halts and reports an error.}

\item{rng.seed}{The seed used for the random number generator (default
    362436069) for reproducibility.}

\item{verbose}{Print out progress? Default is TRUE.}

\item{.parallel}{Logical indicating whether to use parallel processing for imputation
(default: FALSE). Requires the 'mirai' package if enabled.}
}
\value{
A tibble containing the tuning results. Each row corresponds to a specific repetition and
  parameter combination, with columns:
  \itemize{
    \item `rep`: The repetition number.
    \item `param_id`: The ID of the parameter combination.
    \item `n.feat`, `k`, `n.overlap`: The parameter values used.
    \item `result`: A nested tibble with columns `truth` (original values) and `estimate`
      (imputed values) for the injected NAs.
  }
}
\description{
This function tunes the parameters for the `rknnim` imputation method by injecting missing values
into the dataset multiple times and evaluating the imputation performance for different parameter
combinations.
}
\examples{
\dontrun{
data(khanmiss1)

parameters <- dplyr::tibble(
  n.feat = c(100, 100, 100),
  k = c(5, 10, 10),
  n.overlap = c(10, 10, 10)
)
results <- tune_rknnim(
  khanmiss1,
  parameters,
  rep = 5
)

# Compute multiple metrics using yardstick
library(yardstick)
met_set <- metric_set(mae, rmse, rsq)
results$metrics <- lapply(
  results$result,
  function(x) {
    met_set(x, truth = truth, estimate = estimate)
  }
)

# Unnest the metrics
tidyr::unnest(dplyr::select(results, -result), cols = "metrics")

# View metrics for the first result
results$metrics[[1]]
}

}
